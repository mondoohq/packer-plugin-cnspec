// Code generated by "packer-sdc mapstructure-to-hcl2"; DO NOT EDIT.

package provisioner

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	PackerBuildName      *string           `mapstructure:"packer_build_name" cty:"packer_build_name" hcl:"packer_build_name"`
	PackerBuilderType    *string           `mapstructure:"packer_builder_type" cty:"packer_builder_type" hcl:"packer_builder_type"`
	PackerCoreVersion    *string           `mapstructure:"packer_core_version" cty:"packer_core_version" hcl:"packer_core_version"`
	PackerDebug          *bool             `mapstructure:"packer_debug" cty:"packer_debug" hcl:"packer_debug"`
	PackerForce          *bool             `mapstructure:"packer_force" cty:"packer_force" hcl:"packer_force"`
	PackerOnError        *string           `mapstructure:"packer_on_error" cty:"packer_on_error" hcl:"packer_on_error"`
	PackerUserVars       map[string]string `mapstructure:"packer_user_variables" cty:"packer_user_variables" hcl:"packer_user_variables"`
	PackerSensitiveVars  []string          `mapstructure:"packer_sensitive_variables" cty:"packer_sensitive_variables" hcl:"packer_sensitive_variables"`
	HostAlias            *string           `mapstructure:"host_alias" cty:"host_alias" hcl:"host_alias"`
	User                 *string           `mapstructure:"user" cty:"user" hcl:"user"`
	LocalPort            *uint             `mapstructure:"local_port" cty:"local_port" hcl:"local_port"`
	SSHHostKeyFile       *string           `mapstructure:"ssh_host_key_file" cty:"ssh_host_key_file" hcl:"ssh_host_key_file"`
	SSHAuthorizedKeyFile *string           `mapstructure:"ssh_authorized_key_file" cty:"ssh_authorized_key_file" hcl:"ssh_authorized_key_file"`
	UseSFTP              *bool             `mapstructure:"use_sftp" cty:"use_sftp" hcl:"use_sftp"`
	Debug                *bool             `mapstructure:"debug" cty:"debug" hcl:"debug"`
	AssetName            *string           `mapstructure:"asset_name" cty:"asset_name" hcl:"asset_name"`
	OnFailure            *string           `mapstructure:"on_failure" cty:"on_failure" hcl:"on_failure"`
	Labels               map[string]string `mapstructure:"labels" cty:"labels" hcl:"labels"`
	Annotations          map[string]string `mapstructure:"annotations" cty:"annotations" hcl:"annotations"`
	Incognito            *bool             `mapstructure:"incognito" cty:"incognito" hcl:"incognito"`
	Policies             []string          `mapstructure:"policies" cty:"policies" hcl:"policies"`
	PolicyBundle         *string           `mapstructure:"policybundle" cty:"policybundle" hcl:"policybundle"`
	Sudo                 *FlatSudoConfig   `mapstructure:"sudo" cty:"sudo" hcl:"sudo"`
	WinRMUser            *string           `mapstructure:"winrm_user" cty:"winrm_user" hcl:"winrm_user"`
	WinRMPassword        *string           `mapstructure:"winrm_password" cty:"winrm_password" hcl:"winrm_password"`
	UseProxy             *bool             `mapstructure:"use_proxy" cty:"use_proxy" hcl:"use_proxy"`
	Output               *string           `mapstructure:"output" cty:"output" hcl:"output"`
	ScoreThreshold       *int              `mapstructure:"score_threshold" cty:"score_threshold" hcl:"score_threshold"`
	MondooConfigPath     *string           `mapstructure:"mondoo_config_path" cty:"mondoo_config_path" hcl:"mondoo_config_path"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatConfig)
}

// HCL2Spec returns the hcl spec of a Config.
// This spec is used by HCL to read the fields of Config.
// The decoded values from this spec will then be applied to a FlatConfig.
func (*FlatConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"packer_build_name":          &hcldec.AttrSpec{Name: "packer_build_name", Type: cty.String, Required: false},
		"packer_builder_type":        &hcldec.AttrSpec{Name: "packer_builder_type", Type: cty.String, Required: false},
		"packer_core_version":        &hcldec.AttrSpec{Name: "packer_core_version", Type: cty.String, Required: false},
		"packer_debug":               &hcldec.AttrSpec{Name: "packer_debug", Type: cty.Bool, Required: false},
		"packer_force":               &hcldec.AttrSpec{Name: "packer_force", Type: cty.Bool, Required: false},
		"packer_on_error":            &hcldec.AttrSpec{Name: "packer_on_error", Type: cty.String, Required: false},
		"packer_user_variables":      &hcldec.AttrSpec{Name: "packer_user_variables", Type: cty.Map(cty.String), Required: false},
		"packer_sensitive_variables": &hcldec.AttrSpec{Name: "packer_sensitive_variables", Type: cty.List(cty.String), Required: false},
		"host_alias":                 &hcldec.AttrSpec{Name: "host_alias", Type: cty.String, Required: false},
		"user":                       &hcldec.AttrSpec{Name: "user", Type: cty.String, Required: false},
		"local_port":                 &hcldec.AttrSpec{Name: "local_port", Type: cty.Number, Required: false},
		"ssh_host_key_file":          &hcldec.AttrSpec{Name: "ssh_host_key_file", Type: cty.String, Required: false},
		"ssh_authorized_key_file":    &hcldec.AttrSpec{Name: "ssh_authorized_key_file", Type: cty.String, Required: false},
		"use_sftp":                   &hcldec.AttrSpec{Name: "use_sftp", Type: cty.Bool, Required: false},
		"debug":                      &hcldec.AttrSpec{Name: "debug", Type: cty.Bool, Required: false},
		"asset_name":                 &hcldec.AttrSpec{Name: "asset_name", Type: cty.String, Required: false},
		"on_failure":                 &hcldec.AttrSpec{Name: "on_failure", Type: cty.String, Required: false},
		"labels":                     &hcldec.AttrSpec{Name: "labels", Type: cty.Map(cty.String), Required: false},
		"annotations":                &hcldec.AttrSpec{Name: "annotations", Type: cty.Map(cty.String), Required: false},
		"incognito":                  &hcldec.AttrSpec{Name: "incognito", Type: cty.Bool, Required: false},
		"policies":                   &hcldec.AttrSpec{Name: "policies", Type: cty.List(cty.String), Required: false},
		"policybundle":               &hcldec.AttrSpec{Name: "policybundle", Type: cty.String, Required: false},
		"sudo":                       &hcldec.BlockSpec{TypeName: "sudo", Nested: hcldec.ObjectSpec((*FlatSudoConfig)(nil).HCL2Spec())},
		"winrm_user":                 &hcldec.AttrSpec{Name: "winrm_user", Type: cty.String, Required: false},
		"winrm_password":             &hcldec.AttrSpec{Name: "winrm_password", Type: cty.String, Required: false},
		"use_proxy":                  &hcldec.AttrSpec{Name: "use_proxy", Type: cty.Bool, Required: false},
		"output":                     &hcldec.AttrSpec{Name: "output", Type: cty.String, Required: false},
		"score_threshold":            &hcldec.AttrSpec{Name: "score_threshold", Type: cty.Number, Required: false},
		"mondoo_config_path":         &hcldec.AttrSpec{Name: "mondoo_config_path", Type: cty.String, Required: false},
	}
	return s
}

// FlatSudoConfig is an auto-generated flat version of SudoConfig.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatSudoConfig struct {
	Active *bool `mapstructure:"active" cty:"active" hcl:"active"`
}

// FlatMapstructure returns a new FlatSudoConfig.
// FlatSudoConfig is an auto-generated flat version of SudoConfig.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*SudoConfig) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatSudoConfig)
}

// HCL2Spec returns the hcl spec of a SudoConfig.
// This spec is used by HCL to read the fields of SudoConfig.
// The decoded values from this spec will then be applied to a FlatSudoConfig.
func (*FlatSudoConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"active": &hcldec.AttrSpec{Name: "active", Type: cty.Bool, Required: false},
	}
	return s
}
