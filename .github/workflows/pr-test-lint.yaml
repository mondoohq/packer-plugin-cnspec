name: Build Packer Plugin

## Only trigger tests if source is changing
on:
  push:
    paths:
      - "**.go"
      - "**.mod"
      - "go.sum"

jobs:
  license-check:
    name: License Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Copywrite
        uses: hashicorp/setup-copywrite@32638da2d4e81d56a0764aa1547882fc4d209636 # v1.1.3

      - name: Check Header Compliance
        run: copywrite headers --plan

  goreleaser:
    name: GoReleaser
    runs-on: self-hosted
    env:
      RUNNER_TYPE: "self-hosted"
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Import environment variables from file
        run: cat ".github/env" >> $GITHUB_ENV
      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ">=${{ env.golang-version }}"
          cache: false
      - name: Check go mod
        run: |
          go mod tidy
          git diff --exit-code go.mod

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: latest
          skip-cache: true

      - name: "Install required tooling"
        if: ${{ env.RUNNER_TYPE != 'self-hosted' }}
        run: |
          # Only use sudo on self-hosted runners
          sudo apt install -y zip
      - name: Set cnspec version
        run: echo "CNSPEC_VERSION=$(go list -json -m go.mondoo.com/cnspec/v12 | jq -r '.Version')" >> $GITHUB_ENV
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          version: latest
          args: release --snapshot --skip=publish --clean
        env:
          API_VERSION: x5.0
          CNSPEC_VERSION: ${{ env.CNSPEC_VERSION }}

  go-auto-approve:
    runs-on: ubuntu-latest
    needs: [goreleaser, license-check]
    # For now, we only auto approve and merge cnspec bump PRs created by mondoo-tools.
    # We have to check the commit author, because the PR is created by "github-actions[bot]"
    # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/evaluate-expressions-in-workflows-and-actions#startswith
    if: ${{ startsWith(github.ref, 'refs/heads/version/cnspec_update_v') && github.event.commits[0].author.username == 'mondoo-tools' }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      # figure out the PR for this commit
      - uses: cloudposse-github-actions/get-pr@ba7d9e7db690abb3c5b84f4337cd51e75f7cfb71 # v2.0.0
        id: pr
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          filterOutClosed: true
          filterOutDraft: true
      # fetch a token for the mondoo-mergebot app
      - name: Generate token
        id: generate-token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        with:
          app-id: ${{ secrets.MONDOO_MERGEBOT_APP_ID }}
          private-key: ${{ secrets.MONDOO_MERGEBOT_APP_PRIVATE_KEY }}
      # automerge using bot token
      - name: Approve and merge a PR
        run: |
          gh pr review ${{ steps.pr.outputs.number }} --approve
          gh pr merge ${{ steps.pr.outputs.number }} --squash
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
